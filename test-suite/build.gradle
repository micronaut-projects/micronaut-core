import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "gradle.plugin.com.energizedwork.webdriver-binaries:webdriver-binaries-gradle-plugin:$webdriverBinariesVersion"
    }
}

apply from: "${rootProject.projectDir}/gradle/geb.gradle"
apply from: "${rootProject.projectDir}/gradle/webdriverbinaries.gradle"

dependencies {
    annotationProcessor project(":inject-java")
    api project(":inject")

    testImplementation dependencyModuleVersion("netty", "netty-codec-http")
    testImplementation project(":http-server-netty")
    testImplementation project(":http-client")
    testImplementation project(":validation")
    testImplementation project(":inject-groovy")
    testImplementation project(":inject-java")
    testImplementation project(":inject-java-test")
    testImplementation project(":tracing")
    testImplementation project(":management")
    testImplementation project(":runtime")
    testImplementation project(":inject")
    testImplementation project(":function-client")
    testImplementation project(":function-web")
    testImplementation project(":session")
    testImplementation dependencyModuleVersion("micronaut.test", "micronaut-test-junit5"), {
        exclude module:'micronaut-runtime'
        exclude module:'micronaut-inject'
    }
    // Adding these for now since micronaut-test isnt resolving correctly ... probably need to upgrade gradle there too
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")

    testImplementation dependencyModuleVersion("micronaut.test", "micronaut-test-spock"), {
        exclude module:'micronaut-runtime'
        exclude module:'micronaut-inject'
    }

    testImplementation dependencyVersion("jcache")
    testImplementation dependencyVersion("jaeger")
    testImplementation dependencyModuleVersion("groovy", "groovy-json")
    // tag::testcontainers-dependencies[]
    testImplementation "org.testcontainers:spock:1.14.3"
    // end::testcontainers-dependencies[]
    testImplementation 'org.awaitility:awaitility:4.0.3'

    testAnnotationProcessor project(":test-suite-helper")
    testAnnotationProcessor project(":inject-java")
    testAnnotationProcessor project(":test-suite")

    testRuntimeOnly dependencyVersion("tomcatJdbc")
    testRuntimeOnly dependencyVersion("h2")
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junitVersion"
    testRuntimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testRuntimeOnly group: 'com.amazonaws', name: 'aws-java-sdk-lambda', version: '1.11.879'

    // needed for HTTP/2 tests
    testImplementation 'io.netty:netty-tcnative:2.0.34.Final'
    testImplementation 'io.netty:netty-tcnative-boringssl-static:2.0.34.Final'
    testImplementation "io.netty:netty-tcnative-boringssl-static:2.0.34.Final:${Os.isFamily(Os.FAMILY_MAC) ? 'osx-x86_64' : 'linux-x86_64'}"
    testImplementation 'org.zalando:logbook-netty:2.1.0'
    testImplementation "ch.qos.logback:logback-classic:1.2.3"
}

//tasks.withType(Test) {
//    useJUnitPlatform()
//
//    jvmArgs('-Dio.netty.leakDetection.level=paranoid')
//    testLogging {
//        showStandardStreams = true
//    }
//    beforeTest {
//        System.out.println("STARTING: ${it.className}.$it.name")
//        System.out.flush()
//    }
//    afterTest {
//        System.out.println("FINISHED: ${it.className}.$it.name")
//        System.out.flush()
//    }
//}

//compileTestJava.options.fork = true
//compileTestJava.options.forkOptions.jvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005']
