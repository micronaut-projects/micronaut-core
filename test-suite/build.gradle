import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "gradle.plugin.com.energizedwork.webdriver-binaries:webdriver-binaries-gradle-plugin:$webdriverBinariesVersion"
    }
}

apply from: "${rootProject.projectDir}/gradle/geb.gradle"
apply from: "${rootProject.projectDir}/gradle/webdriverbinaries.gradle"

dependencies {
    annotationProcessor project(":inject-java")
    api project(":inject")

    testImplementation project(":context")
    testImplementation libs.managed.netty.codec.http
    testImplementation project(":http-server-netty")
    testImplementation project(":http-client")
    testImplementation project(":validation")
    testImplementation project(":inject-groovy")
    testImplementation project(":inject-java")
    testImplementation project(":inject-java-test")
    testImplementation project(":tracing")
    testImplementation project(":management")
    testImplementation project(":runtime")
    testImplementation project(":inject")
    testImplementation project(":function-client")
    testImplementation project(":function-web")
    testImplementation project(":session")
    testImplementation(libs.managed.micronaut.test.junit5) {
        exclude module:'micronaut-runtime'
        exclude module:'micronaut-inject'
    }
    // Adding these for now since micronaut-test isnt resolving correctly ... probably need to upgrade gradle there too
    testImplementation libs.junit.jupiter.api

    testImplementation(libs.managed.micronaut.test.spock) {
        exclude module:'micronaut-runtime'
        exclude module:'micronaut-inject'
    }

    testImplementation libs.managed.jcache
    testImplementation libs.managed.jaeger
    testImplementation libs.managed.groovy.json
    // tag::testcontainers-dependencies[]
    testImplementation libs.testcontainers.spock
    // end::testcontainers-dependencies[]
    testImplementation libs.awaitility

    testAnnotationProcessor project(":test-suite-helper")
    testAnnotationProcessor project(":inject-java")
    testAnnotationProcessor project(":test-suite")

    testRuntimeOnly libs.managed.h2
    testRuntimeOnly libs.junit.vintage
    testRuntimeOnly libs.managed.logback
    testRuntimeOnly libs.aws.java.sdk.lambda

    // needed for HTTP/2 tests
    testImplementation libs.netty.tcnative
    testImplementation libs.netty.tcnative.boringssl
    testImplementation(libs.netty.tcnative.boringssl) {
        artifact {
            classifier = Os.isFamily(Os.FAMILY_MAC) ? 'osx-x86_64' : 'linux-x86_64'
        }
    }
    testImplementation libs.logbook.netty
    testImplementation libs.managed.logback

    if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_15)) {
        testImplementation libs.bcpkix
    }

    testImplementation libs.managed.reactor
}

//tasks.withType(Test) {
//    useJUnitPlatform()
//
//    jvmArgs('-Dio.netty.leakDetection.level=paranoid')
//    testLogging {
//        showStandardStreams = true
//    }
//    beforeTest {
//        System.out.println("STARTING: ${it.className}.$it.name")
//        System.out.flush()
//    }
//    afterTest {
//        System.out.println("FINISHED: ${it.className}.$it.name")
//        System.out.flush()
//    }
//}

//compileTestJava.options.fork = true
//compileTestJava.options.forkOptions.jvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005']
