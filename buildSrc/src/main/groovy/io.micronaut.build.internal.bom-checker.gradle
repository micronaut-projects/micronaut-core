import io.micronaut.build.internal.pom.PomChecker

plugins {
    // used to get the "clean" task
    id 'base'
}

def catalog = project.extensions.findByType(VersionCatalogsExtension).named("libs")

def checkBoms = tasks.register("checkBom")

tasks.named("check") {
    dependsOn(checkBoms)
}

// First we create a task per BOM that we include, in order
// to check that they exist for the specified version and
// that their dependencyManagement block only contains expected
// dependencies
catalog.dependencyAliases.stream()
        .filter { it.startsWith("boms.") }
        .forEach { alias ->
            String name = alias.split("[.]").collect { it.capitalize() }.join('')
            def checker = tasks.register("check$name", PomChecker) {
                repositories = [ project.repositories.findByName("MavenRepo").url.toString() ]
                pomCoordinates = catalog.findDependency(alias).map {
                    it.map { "${it.module.group}:${it.module.name}:${it.versionConstraint.requiredVersion}" }
                }.get()
                checkBomContents = true
                report = layout.buildDirectory.file("reports/boms/${alias}.txt")
            }
            checkBoms.configure {
                it.dependsOn(checker)
            }
        }

// Then we create a task per dependency we include in the BOM
// to check that it exists
catalog.dependencyAliases.stream()
        .filter { it.startsWith("managed.") }
        .forEach { alias ->
            String name = alias.split("[.]").collect { it.capitalize() }.join('')
            def checker = tasks.register("check$name", PomChecker) {
                repositories = [ project.repositories.findByName("MavenRepo").url.toString(), *project.repositories*.url*.toString() ]
                pomCoordinates = catalog.findDependency(alias).map {
                    it.map { "${it.module.group}:${it.module.name}:${it.versionConstraint.requiredVersion}" }
                }.get()
                checkBomContents = false
                report = layout.buildDirectory.file("reports/dependencies/${alias}.txt")
            }
            checkBoms.configure {
                it.dependsOn(checker)
            }
        }
