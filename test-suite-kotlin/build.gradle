plugins {
    id "org.jetbrains.kotlin.jvm"
    id "org.jetbrains.kotlin.kapt"
}

dependencies {
    api libs.kotlin.stdlib
    api libs.kotlin.reflect
    api libs.kotlinx.coroutines.core
    api libs.kotlinx.coroutines.jdk8
    api libs.kotlinx.coroutines.rx2
    api project(':http-server-netty')
    api project(':http-client')
    api project(':runtime')

    testImplementation project(":context")
    testImplementation libs.kotlin.test
    testImplementation libs.kotlinx.coroutines.rx2

    // Adding these for now since micronaut-test isnt resolving correctly ... probably need to upgrade gradle there too
    testImplementation libs.junit.jupiter.api

    testImplementation project(":validation")
    testImplementation project(":management")
    testImplementation project(':inject-java')
    testImplementation project(":inject")
    testImplementation libs.managed.jcache
    testImplementation project(':validation')
    testImplementation project(":http-client")
    testImplementation project(":session")
    testImplementation libs.managed.groovy.templates
    testImplementation(libs.managed.micronaut.test.junit5) {
        exclude module:'micronaut-runtime'
        exclude module:'micronaut-inject'
    }
    testImplementation(libs.managed.micronaut.test.kotest) {
        exclude module:'micronaut-runtime'
        exclude module:'micronaut-inject'
    }
    testImplementation project(":function-client")
    testImplementation project(":function-web")
    testImplementation project(':tracing')
    testImplementation libs.kotlin.kotest.junit5
    testImplementation libs.logbook.netty
    kaptTest project(':inject-java')
    kaptTest project(':validation')
    testImplementation libs.javax.inject

    testRuntimeOnly libs.junit.jupiter.engine
    testRuntimeOnly libs.aws.java.sdk.lambda
    if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_15)) {
        testImplementation libs.bcpkix
    }

    testImplementation libs.managed.reactor
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform()
}
