group projectGroupId
version projectVersion

ext.startPomInfo = {
    delegate.parent {
        groupId projectGroupId
        artifactId "micronaut-bom"
        delegate.version projectVersion
    }
}
ext.extraPomInfo = {
    delegate.properties {
        'jdk.version'('1.8')
        'release.version'('8')
        'maven.compiler.source'('${jdk.version}')
        'maven.compiler.target'('${jdk.version}')
        'maven.compiler.parameters'('true')
        'project.build.sourceEncoding'('UTF-8')
        'project.reporting.outputEncoding'('UTF-8')

        "micronaut.version"(projectVersion)
        'micronaut-maven-plugin.version'(micronautMavenPluginVersion)

        'azure-functions-maven-plugin.version'('1.5.0')
        'exec-maven-plugin.version'('1.6.0')
        'function-maven-plugin.version'('0.9.4')
        'jib-maven-plugin.version'('2.5.2')
        'maven-compiler-plugin.version'('3.8.1') // Override actual Maven compiler version (3.1) because some bugs cause annotation processors doesn't work well
        'maven-failsafe-plugin.version'('2.22.2') // Override actual Maven surefire and failsafe version (2.12) to get native support for executing tests on the JUnit Platform (JUnit 5)
        'maven-resources-plugin.version'('3.1.0')
        'maven-shade-plugin.version'('3.1.0')
        'maven-surefire-plugin.version'('2.22.2') // Override actual Maven surefire and failsafe version (2.12) to get native support for executing tests on the JUnit Platform (JUnit 5)
        'protoc-jar-maven-plugin.version'('3.11.4')
    }
    delegate.profiles {
        delegate.profile {
            id('jdk-9-or-later')
            delegate.activation {
                jdk('[9,)')
            }
            delegate.properties {
                'maven.compiler.release'('${release.version}')
            }
        }
    }
    delegate.build {
        delegate.pluginManagement {
            delegate.plugins {
                delegate.plugin {
                    groupId "io.micronaut.build"
                    artifactId "micronaut-maven-plugin"
                    delegate.version '${micronaut-maven-plugin.version}'
                }
                delegate.plugin {
                    groupId "com.github.os72"
                    artifactId "protoc-jar-maven-plugin"
                    delegate.version '${protoc-jar-maven-plugin.version}'
                    delegate.executions {
                        execution {
                            phase('generate-sources')
                            goals {
                                goal("run")
                            }
                            delegate.configuration {
                                addProtoSources('all')
                                includeMavenTypes('direct')
                                inputDirectories {
                                    include('src/main/proto')
                                }
                                outputTargets {
                                    outputTarget {
                                        type("java")
                                    }
                                    outputTarget {
                                        type("grpc-java")
                                        pluginArtifact('io.grpc:protoc-gen-grpc-java:${grpc.version}')
                                    }
                                }
                            }
                        }
                    }
                }
                delegate.plugin {
                    groupId "org.codehaus.mojo"
                    artifactId "exec-maven-plugin"
                    delegate.version '${exec-maven-plugin.version}'
                    delegate.configuration {
                        executable("java")
                        arguments {
                            argument("-classpath")
                            classpath()
                            argument("-XX:TieredStopAtLevel=1")
                            argument("-Dcom.sun.management.jmxremote")
                            argument('${exec.mainClass}')
                        }
                    }
                }
                delegate.plugin {
                    groupId "com.google.cloud.functions"
                    artifactId "function-maven-plugin"
                    delegate.version '${function-maven-plugin.version}'
                }
                delegate.plugin {
                    groupId "com.google.cloud.tools"
                    artifactId "jib-maven-plugin"
                    delegate.version '${jib-maven-plugin.version}'
                }
                delegate.plugin {
                    groupId "com.microsoft.azure"
                    artifactId "azure-functions-maven-plugin"
                    delegate.version '${azure-functions-maven-plugin.version}'
                }

                delegate.plugin {
                    groupId "org.apache.maven.plugins"
                    artifactId "maven-resources-plugin"
                    delegate.version '${maven-resources-plugin.version}'
                }
                delegate.plugin {
                    groupId "org.apache.maven.plugins"
                    artifactId "maven-compiler-plugin"
                    delegate.version '${maven-compiler-plugin.version}'
                }
                delegate.plugin {
                    groupId 'org.apache.maven.plugins'
                    artifactId 'maven-surefire-plugin'
                    delegate.version '${maven-surefire-plugin.version}'
                }
                delegate.plugin {
                    groupId 'org.apache.maven.plugins'
                    artifactId 'maven-failsafe-plugin'
                    delegate.version '${maven-failsafe-plugin.version}'
                    delegate.executions {
                        execution {
                            goals {
                                goal 'integration-test'
                                goal 'verify'
                            }
                        }
                    }
                }
                delegate.plugin {
                    groupId "org.apache.maven.plugins"
                    artifactId "maven-shade-plugin"
                    delegate.version '${maven-shade-plugin.version}'
                    delegate.executions {
                        execution {
                            delegate.phase "package"
                            goals {
                                goal "shade"
                            }
                            delegate.configuration {
                                createDependencyReducedPom(false)
                                transformers {
                                    transformer(implementation:'org.apache.maven.plugins.shade.resource.ManifestResourceTransformer') {
                                        mainClass('${exec.mainClass}')
                                    }
                                    transformer(implementation:'org.apache.maven.plugins.shade.resource.ServicesResourceTransformer')
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

apply plugin: "io.micronaut.build.publishing"
