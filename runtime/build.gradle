ext {
    shadowJarEnabled = true
}
dependencies {
    annotationProcessor project(":inject-java")
    annotationProcessor project(":graal")
    api project(":http")
    api project(':inject')
    api project(':aop')
    api dependencyVersion("validation")
    api dependencyVersion("jackson.databind")
    api dependencyVersion("rxjava2")
    api([
            dependencyVersion('jackson.datatype'),
            dependencyModuleVersion('jackson.datatype', 'jackson-datatype-jsr310')
    ])

    compileOnly "org.graalvm.nativeimage:svm:$graalVersion"
    compileOnly dependencyVersion("jcache")

    compileOnly(
        dependencyModuleVersion('jackson.modules', 'jackson-module-kotlin')
    ) {
        transitive = false
    }
    compileOnly(
            dependencyVersion('jackson.modules')
    ) {
        transitive = false
    }
    compileOnly(
        dependencyModuleVersion('jackson.modules', 'jackson-module-parameter-names')
    ) {
        transitive = false
    }

    compileOnly 'org.glassfish:javax.el:3.0.1-b11'
    compileOnly dependencyVersion("reactor")
    compileOnly dependencyVersion("rxjava1.interop")
    compileOnly "com.github.ben-manes.caffeine:caffeine:$caffeineVersion"
    compileOnly 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'
    compileOnly 'org.jetbrains.kotlinx:kotlinx-coroutines-reactive:1.3.4'
    compileOnly "ch.qos.logback:logback-classic:1.2.3"
    testImplementation "ch.qos.logback:logback-classic:1.2.3"

    testAnnotationProcessor project(":inject-java") 
    testImplementation 'org.jsr107.ri:cache-ri-impl:1.1.1'
    testImplementation dependencyVersion("jcache")
    testImplementation dependencyVersion("rxjava1.interop")
    testImplementation dependencyVersion("reactor")
    testImplementation project(":inject-java")    
    testImplementation project(":inject-java-test")
    testImplementation project(":inject-groovy")
    testImplementation dependencyModuleVersion("gorm", "grails-datastore-gorm")
    if (!JavaVersion.current().isJava9Compatible()) {
        testImplementation files(org.gradle.internal.jvm.Jvm.current().toolsJar)
    }
}

//compileJava.options.fork = true
//compileJava.options.forkOptions.jvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005']

//compileTestGroovy.groovyOptions.forkOptions.jvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005']
