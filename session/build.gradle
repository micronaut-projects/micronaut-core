apply plugin: 'com.github.johnrengelman.plugin-shadow'

dependencies {
    shadowCompile project(":runtime")
    compile project(":runtime")
    shadowCompile project(":http")
    compile project(":http")

    compileOnly([group:'com.github.ben-manes.caffeine',name:'caffeine', version:caffeineVersion])
    compileOnly project(":inject-java")
    compileOnly project(":http-server")

    testCompile project(":inject-groovy")
    testCompile project(":http-server-netty")
    testCompile project(":http-client")
}
shadowJar {
    dependencies {
        for(dep in project.configurations.shadowCompile.dependencies) {
            if(dep instanceof ProjectDependency) {
                exclude(project(":$dep.name"))
            }
            else if(dep instanceof ExternalDependency) {
                exclude(dependency("$dep.group:$dep.name:.*"))
            }
        }
        exclude(project(":core"))
        exclude(project(":http"))
        exclude(project(":inject"))
        exclude(project(":runtime"))
        exclude(dependency("javax.validation:.*:.*"))
        exclude(dependency("io.reactivex.rxjava2:.*:.*"))
        exclude(dependency("com.fasterxml.*:.*:.*"))
        exclude(dependency(group:'org.slf4j',name:'slf4j-api',version:slf4jVersion))
        exclude(dependency(group: 'javax.inject', name: 'javax.inject', version: '1'))
        exclude(dependency('org.ow2.asm:.*:.*'))
        exclude(dependency('org.reactivestreams:.*:.*'))
        exclude(dependency('com.google.code.findbugs:.*:.*'))
        exclude(dependency('com.github.ben-manes.caffeine:.*:.*'))
    }

    relocate "org.objectweb.asm", "io.micronaut.asm"
    relocate "com.github.benmanes.caffeine", "io.micronaut.caffeine"

}
tasks.withType(com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation) { t ->
    t.enabled = false
}

//compileTestGroovy.groovyOptions.forkOptions.jvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005']