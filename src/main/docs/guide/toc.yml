introduction:
  title: Introduction
  whatsNew: What's New?
quickStart:
  title: Quick Start
  buildCLI:
    title: Build/Install the CLI
    installSdkman: Install with Sdkman
    installWindows: Install through Binary on Windows
    buildSource: Building from Source
  creatingServer: Creating a Server Application
  ideSetup: Setting up an IDE
  creatingClient: Creating a Client
  deployingApp: Deploying the Application
ioc:
  title: Inversion of Control
  beans: Defining Beans
  how: How Does it Work?
  beanContext: The BeanContext 
  types: Injectable Container Types
  qualifiers: Bean Qualifiers
  scopes:
    title: Scopes
    builtInScopes: Built-In Scopes
    refreshable: Refreshable Scope
    metaScopes: Scopes on Meta Annotations
  factories: Bean Factories
  conditionalBeans: Conditional Beans
  replaces: Bean Replacement
  beanConfigurations: Bean Configurations
  lifecycle: Life-Cycle Methods
  contextEvents: Context Events
  events: Bean Events
  introspection: Bean Introspection
  annotationMetadata: Bean Annotation Metadata
  springBeans: Micronaut Beans And Spring
  android: Android Support
config:
  title: Application Configuration
  environments: The Environment
  propertySource: Externalized Configuration with PropertySources
  valueAnnotation: Configuration Injection
  configurationProperties: Configuration Properties
  customTypeConverter: Custom Type Converters
  eachProperty: Using @EachProperty to Drive Configuration
  eachBean: Using @EachBean to Drive Configuration
  # validation: Validating Configuration
  jmx:
    title: JMX Support
aop:
  title: Aspect Oriented Programming
  aroundAdvice: Around Advice
  introductionAdvice: Introduction Advice
  adapterAdvice: Method Adapter Advice
  validation:
    title: Validation Advice
  caching: 
    title: Cache Advice
  retry:
    title: Retry Advice
  scheduling:
    title: Scheduled Tasks
  springAop:
    title: Bridging Spring AOP
httpServer:
  title: The HTTP Server
  runningServer: Running the Embedded Server
  runningSpecificPort: Running Server on a Specific Port
  routing: HTTP Routing
  binding: Simple Request Binding
  requestResponse: The HttpRequest and HttpResponse
  statusAnnotation: Response Status
  producesAnnotation: Response Content-Type
  consumesAnnotation: Accepted Request Content-Type
  reactiveServer:
    title: Reactive HTTP Request Processing
    bodyAnnotation: Using the @Body Annotation
    reactiveResponses: Reactive Responses
  jsonBinding: JSON Binding with Jackson
  datavalidation: Data Validation
  staticResources: Serving Static Resources
  errorHandling: Error Handling
  apiVersioning: API Versioning
  formData: Handling Form Data
  serverIO: Writing Response Data
  uploads: File Uploads
  transfers: File Transfers
  filters: HTTP Filters
  sessions: HTTP Sessions
  sse: Server Sent Events
  websocket:
    title: WebSocket Support
    websocketServer: Using @ServerWebSocket
    websocketClient: Using @ClientWebSocket
  serverEvents: Server Events
  serverConfiguration:
    title: Configuring the HTTP Server
    threadPools: Configuring Server Thread Pools
    cors: Configuring CORS
    https: Securing the Server with HTTPS
  views:
    title: Server Side View Rendering
    thymeleaf: Thymeleaf
    handlebars: Handlebars.java
    velocity: Apache Velocity
    freemarker: Apache Freemarker
    csp: CSP Header Support
  openapi: OpenAPI / Swagger Support
  graphql: GraphQL Support
httpClient:
  title: The HTTP Client
  lowLevelHttpClient:
    title: Using the Low-Level HTTP Client
    clientBasics: Sending your first HTTP request
    clientPostRequests: Posting a Request Body
    clientUploads: Multipart Client Uploads
    clientStreaming: Streaming JSON over HTTP
    clientConfiguration: Configuring HTTP clients
    bindErrors: Bind Errors
  clientAnnotation:
    title: Declarative HTTP Clients with @Client
    clientParameters: Customizing Parameter Binding
    clientAnnotationStreaming: Streaming with @Client
    clientHeaders: Customizing Request Headers
    clientJackson: Customizing Jackson Settings
    clientRetry: Retry and Circuit Breaker
    clientFallback: Client Fallbacks
    netflixHystrix: Netflix Hystrix Support
  clientFilter: HTTP Client Filters
  clientSample: HTTP Client Sample
cloud:
  title: Cloud Native Features
  cloudConfiguration:
    title: Cloud Configuration
    distributedConfiguration: Distributed Configuration
    distributedConfigurationConsul: Consul Support
    distributedConfigurationSpringCloud: Spring Cloud Config Support
    distributedConfigurationAwsParameterStore: AWS Parameter Store Support
  serviceDiscovery:
    title: Service Discovery
    serviceDiscoveryConsul: Consul Support
    serviceDiscoveryEureka: Eureka Support
    serviceDiscoveryKubernetes: Kubernetes Support
    serviceDiscoveryRoute53: AWS Route 53 Support
    serviceDiscoveryManual: Manual Service Discovery Configuration
  clientSideLoadBalancing:
    title: Client Side Load Balancing
    netflixRibbon: Netflix Ribbon Support
  distributedTracing:
    title: Distributed Tracing
    zipkin: Tracing with Zipkin
    jaeger: Tracing with Jaeger
serverlessFunctions:
  title: Serverless Functions
  writingFunctions:
    title: Writing Functions
    functionApplication: FunctionApplication
    functionBean: FunctionBean
    groovyFunctions: Groovy Functions
  runningFunctions:
    title: Running Functions
    functionWeb: Functions as Web Applications
    functionCLI: Functions as CLI Applications
  deployingFunctions:
    title: Deploying Functions
    lambdaFunctions: Deploying Functions to AWS Lambda
    openFaasFunctions: Deploying Functions to OpenFaaS
  callingFunctions: Calling Functions with FunctionClient
messaging:
  title: Message-Driven Microservices
  kafka: Kafka Support
  rabbitmq: RabbitMQ Support
commandLineApps:
  title: Standalone Command Line Applications
  picocli:
    title: Picocli Support
    picocliGenerateProject: Generating a Project with the Micronaut CLI
    picocliQuickStart: Picocli Quick Start
configurations:
  title: Configurations
  dataAccess:
    title: Configurations for Data Access
    sqlSupport: Configuring a SQL Data Source
    hibernateSupport: Configuring Hibernate
    mongoSupport: Configuring MongoDB
    neo4jSupport: Configuring Neo4j
    postgresSupport: Configuring Postgres
    redisSupport: Configuring Redis
    cassandraSupport: Configuring Cassandra
    liquibaseSupport: Configuring Liquibase
    flywaySupport: Configuring Flyway
languageSupport:
  title: Language Support
  java: Micronaut for Java
  groovy: Micronaut for Groovy
  kotlin:
    title: Micronaut for Kotlin
    kaptintellij: Kotlin, Kapt and IntelliJ
    openandaop: Kotlin and AOP Advice
    kotlinretainparamnames: Kotlin and Retaining Parameter Names
  graal:
    title: Micronaut for GraalVM
    graalServices: Microservices as GraalVM native images
    graalFAQ: GraalVM and Micronaut FAQ
management:
  title: Management & Monitoring
  buildingEndpoints:
    title: Creating Endpoints
    endpointAnnotation: The Endpoint Annotation
    endpointMethod: Endpoint Methods
    endpointConfiguration: Endpoint Configuration
  providedEndpoints:
    title: Built-In Endpoints
    beansEndpoint: The Beans Endpoint
    infoEndpoint: The Info Endpoint
    healthEndpoint: The Health Endpoint
    metricsEndpoint: The Metrics Endpoint
    refreshEndpoint: The Refresh Endpoint
    routesEndpoint: The Routes Endpoint
    loggersEndpoint: The Loggers Endpoint
    stopEndpoint: The Server Stop Endpoint
security:
  title: Security
  authenticationProviders: Authentication Providers
  securityRule:
      title: Security Rules
      ipPattern: IP Pattern Rule
      secured: Secured Annotation
      interceptUrlMap: Intercept URL Map
      builtInEndpointsAccess: Built-In Endpoints Security
  authenticationStrategies:
    title: Authentication Strategies
    basicAuth: Basic Auth
    session: Session Authentication
    jwt:
      title: JSON Web Token
      reader:
        title: Reading JWT Token
        bearerToken: Bearer Token Reader
        cookieToken: Cookie Token Reader
      jwtGenerator:
        title: JWT Token Generation
        jwtGeneratorSignature: JWT Signature
        jwtGeneratorEncryption: Encrypted JWTs
      jwtValidation: JWT Token Validation
      claimsGeneration: Claims Generation
      render:
        title: Token Render
    ldap:
      title: LDAP Authentication
      configuration: Configuration
      extending: Extending Default Behavior
  rejection: Rejection Handling
  tokenPropagation: Token Propagation
  endpoints:
    title: Built-In Security Controllers
    login: Login Controller
    logout: Logout Controller
    refresh: Refresh Controller
  retrievingAuthenticatedUser:
    title: Retrieve the authenticated user
    securityService: User outside of a controller
    accessSecurityInViews: User in a view
  securityEvents: Security Events

multitenancy:
  title: Multi-Tenancy
  multitenancyGorm: Multi-Tenancy GORM
cli:
  title: Micronaut CLI
  createProject: Creating a Project
  profiles:
    title: Profiles
    comparingVersions: Comparing Versions
  features: Features
  commands: Commands
  reloading:
    title: Reloading
    automaticRestart: Automatic Restart
    jrebel: JRebel
    springloaded: Spring-Loaded
    gradleReload: Reloading with Gradle
    ideReload: Reloading with an IDE
  proxy: Proxy Configuration
appendix:
  title: Appendices
  faq: Frequently Asked Questions (FAQ)
  usingsnapshots: Using Snapshots
  problems: Common Problems
  breaks: Breaking Changes
