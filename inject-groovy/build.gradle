plugins {
    id "io.micronaut.build.internal.convention-library"
    id 'io.micronaut.build.internal.functional-test'
}

micronautBuild {
    core {
        usesMicronautTest()
    }
}

dependencies {
    api project(":inject")
    api project(':aop')
    api libs.managed.groovy
//    testImplementation 'javax.validation:validation-api:1.1.0.Final'
    testImplementation project(":context")
    testImplementation libs.javax.inject
    testImplementation libs.managed.spotbugs
    testImplementation libs.hibernate
    testImplementation libs.hibernate.validator
    testRuntimeOnly libs.javax.el.impl
    testRuntimeOnly libs.javax.el
    testImplementation project(":http-server-netty")
    testImplementation project(":http-client")
    testImplementation project(":inject-test-utils")
    testImplementation project(":inject-groovy-test")
    testImplementation project(":validation")
    testImplementation(libs.managed.neo4j.bolt) {
        version {
            require "1.4.5"
        }
    }
    testImplementation libs.managed.groovy.json
    testImplementation libs.blaze.persistence.core

    testImplementation libs.managed.reactor

    functionalTestImplementation(testFixtures(project(":test-suite")))
}

tasks.named("test") {
    exclude '**/*$_closure*'

    systemProperty "groovy.attach.groovydoc", true
}

//compileTestGroovy.groovyOptions.forkOptions.jvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005']
//compileGroovy.groovyOptions.forkOptions.jvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005']
