# WARNING: Do not edit this file directly. Instead, go to:
#
# https://github.com/micronaut-projects/micronaut-project-template/tree/master/.github/workflows
#
# and edit them there. Note that it will be sync'ed to all the Micronaut repos
name: GraalVM CE CI
on:
  push:
    branches:
      - master
      - '[1-9]+.[0-9]+.x'
  pull_request:
    branches:
      - master
      - '[1-9]+.[0-9]+.x'
jobs:
  build:
    if: github.repository != 'micronaut-projects/micronaut-project-template'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        graalvm: [ 'latest', 'dev' ]
        java: [ '17' ]
        include:
          - graalvm: 'dev'
            java: '19'
        exclude:
          - graalvm: 'dev'
            java: '17'
    steps:
       # https://github.com/actions/virtual-environments/issues/709
      - name: Free disk space
        run: |
         sudo rm -rf "/usr/local/share/boost"
         sudo rm -rf "$AGENT_TOOLSDIRECTORY"
         sudo apt-get clean
         df -h
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Setup GraalVM CE
        uses: graalvm/setup-graalvm@v1
        with:
          version: ${{ matrix.graalvm }}
          java-version: ${{ matrix.java }}
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.3.3
      - name: Build with Gradle
        id: gradle
        run: |
          if ./gradlew tasks --no-daemon --all | grep -w "testNativeImage"
          then
            ./gradlew check testNativeImage --continue --no-daemon
          else
            ./gradlew check --continue --no-daemon
          fi
        env:
           TESTCONTAINERS_RYUK_DISABLED: true
           GH_TOKEN_PUBLIC_REPOS_READONLY: ${{ secrets.GH_TOKEN_PUBLIC_REPOS_READONLY }}
           GH_USERNAME: ${{ secrets.GH_USERNAME }}
           GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
           GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ secrets.GRADLE_ENTERPRISE_CACHE_USERNAME }}
           GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD }}
           PREDICTIVE_TEST_SELECTION: "${{ github.event_name == 'pull_request' && 'true' || 'false' }}"
      - name: Add build scan URL as PR comment
        uses: actions/github-script@v5
        if: github.event_name == 'pull_request' && failure()
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå ${{ github.workflow }} ${{ matrix.java }} ${{ matrix.graalvm }} failed: ${{ steps.gradle.outputs.build-scan-url }}'
            })
      - name: Publish Test Report
        if: always()
        uses: mikepenz/action-junit-report@v3.7.1
        with:
          check_name: GraalVM CE CI / Test Report (Java ${{ matrix.java }})
          report_paths: '**/build/test-results/test/TEST-*.xml'
          check_retries: 'true'
