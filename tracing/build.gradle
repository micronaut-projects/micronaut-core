dependencies {
    annotationProcessor project(":inject-java")
    api dependencyVersion("opentracing")
    api dependencyModuleVersion('opentracing', 'opentracing-util')
    api project(":runtime")
    api project(":http-client")
    implementation project(":core")

    // the following are Tracing implementations and instrumentations which
    // are optionally loaded and not required
    
    compileOnly dependencyModuleVersion('micronaut.netflix', 'micronaut-netflix-hystrix'), {
        exclude group:"io.micronaut", module:'micronaut-runtime'
        exclude group:"io.micronaut.configuration", module:'micronaut-netflix-archaius'
    }
    compileOnly dependencyVersion("brave.instrumentation")
    compileOnly dependencyVersion("zipkin.reporter")
    compileOnly 'io.zipkin.reporter:zipkin-reporter:1.1.2'
    compileOnly dependencyVersion("brave.opentracing")

    compileOnly dependencyVersion("jaeger")
    compileOnly dependencyVersion("reactor")
    compileOnly dependencyVersion("rxjava1.interop")


    testImplementation dependencyModuleVersion('micronaut.netflix', 'micronaut-netflix-hystrix'), {
        exclude group:"io.micronaut", module:'micronaut-runtime'
        exclude group:"io.micronaut.configuration", module:'micronaut-netflix-archaius'
    }
    testImplementation project(":inject-groovy")
    testImplementation project(":discovery-client")
    testImplementation project(":inject-java")
    testAnnotationProcessor project(":inject-java")
    testImplementation project(":http-server-netty")

    testImplementation dependencyVersion("reactor")
    testImplementation dependencyVersion("zipkin.reporter")
    testImplementation dependencyVersion("brave.instrumentation")
    testImplementation dependencyVersion("brave.opentracing")

}

tasks.withType(Test) {
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
    }
}