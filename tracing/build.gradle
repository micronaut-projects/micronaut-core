plugins {
    id "org.jetbrains.kotlin.jvm"
}

internalSanityChecks {
    expectedServiceCount.put('io.micronaut.inject.BeanDefinitionReference', 40)
    expectedServiceCount.put('io.micronaut.inject.BeanConfiguration', 2)
}

dependencies {
    annotationProcessor project(":inject-java")
    api libs.managed.opentracing
    api libs.managed.opentracing.util
    api project(":runtime")
    api project(":http-client")
    implementation project(":core")

    implementation libs.managed.reactor

    // the following are Tracing implementations and instrumentations which
    // are optionally loaded and not required
    compileOnly libs.managed.hystrix
    compileOnly libs.managed.zipkin.brave.instrumentation
    compileOnly libs.managed.zipkin.reporter
    compileOnly libs.managed.brave.opentracing

    compileOnly libs.managed.jaeger
    compileOnly libs.kotlinx.coroutines.core

    testImplementation project(":inject-groovy")
    testImplementation project(":inject-java")
    testAnnotationProcessor project(":inject-java")
    testImplementation project(":http-server-netty")

    testImplementation libs.managed.zipkin.reporter
    testImplementation libs.managed.zipkin.brave.instrumentation
    testImplementation libs.managed.brave.opentracing

}

tasks.withType(Test) {
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
    }
}
