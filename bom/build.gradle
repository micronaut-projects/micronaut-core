plugins {
    id 'java-platform'
}

group projectGroupId

apply plugin: 'maven-publish'

def profiles = new Properties()
profiles.load(new StringReader(new File("$projectDir/profiles.properties").text))
boolean micronautSnapshot = rootProject.version.toString().endsWith("-SNAPSHOT")

def excludedProjects = [
        "benchmarks",
        "test-suite",
        "test-suite-groovy",
        "test-suite-helper",
        "test-suite-kotlin",
        "test-utils"
]

apply from: "${rootProject.rootDir}/gradle/publishing.gradle"
ext.extraPomInfo = {
    delegate.properties {
        for(dep in dependencyVersions) {
            "${dep.key}.version"(dep.value.version)
        }
    }
}
dependencies {
    constraints {
        for (profile in profiles) {
            if (!isBuildSnapshot && version.toString().endsWith("-SNAPSHOT")) {
                throw new RuntimeException("Cannot have a snapshot dependency on a profile [$profile.key] for a release!")
            }
            api "io.micronaut.profiles:$profile.key:$profile.value"
        }

        for (Project p : rootProject.subprojects) {
            if (!p.subprojects.empty) continue
            if (p.name == "bom") continue
            if (excludedProjects.contains(p.name)) continue

            api "$p.group:micronaut-$p.name:$p.version"
        }

        for (dep in dependencyVersions) {
            def info = dep.value
            // don't include snapshots
            if (info.version.toString().endsWith("-SNAPSHOT") && !micronautSnapshot) {
                continue
            }

            def versionExpr = dep.value.version

            if (info.name) {
                api "$info.group:$info.name:$versionExpr"
            }
            if (info.modules) {
                for (m in info.modules) {
                    api "$info.group:$m:$versionExpr"
                }
            }
        }
    }
}