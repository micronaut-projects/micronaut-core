plugins {
    id 'java-platform'
}

group projectGroupId

apply plugin: 'maven-publish'

boolean micronautSnapshot = rootProject.version.toString().endsWith("-SNAPSHOT")

def excludedProjects = [
        "benchmarks",
        "test-suite",
        "test-suite-groovy",
        "test-suite-helper",
        "test-suite-kotlin",
        "test-utils"
]

apply from: "${rootProject.rootDir}/gradle/publishing.gradle"
ext.extraPomInfo = {
    delegate.properties {
        for(dep in dependencyVersions) {
            "${dep.key}.version"(dep.value.version)
        }
        for(dep in bomVersions) {
            "${dep.key}.version"(dep.value.version)
        }
    }
}
javaPlatform {
    allowDependencies()
}
dependencies {
    api platform("io.grpc:grpc-bom:$grpcVersion")
    api platform("com.google.protobuf:protobuf-java-util:$protobufJavaVersion")
    api platform("com.fasterxml.jackson:jackson-bom:$jacksonVersion")
    constraints {
        for (Project p : rootProject.subprojects) {
            if (!p.subprojects.empty) continue
            if (p.name == "bom") continue
            if (excludedProjects.contains(p.name)) continue

            api "$p.group:micronaut-$p.name:$p.version"
        }

        for (dep in dependencyVersions) {
            def info = dep.value
            // don't include snapshots
            if (info.version.toString().endsWith("-SNAPSHOT") && !micronautSnapshot) {
                continue
            }

            def versionExpr = dep.value.version

            if (info.name) {
                api "$info.group:$info.name:$versionExpr"
            }
            if (info.modules) {
                for (m in info.modules) {
                    api "$info.group:$m:$versionExpr"
                }
            }
        }
    }
}