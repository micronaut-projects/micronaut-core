[
    {
        "type": "io.micronaut.core.annotation.AnnotationMetadata",
        "member": "Method io.micronaut.core.annotation.AnnotationMetadata.getStereotypeAnnotationNames()",
        "reason": "AnnotationMetadata is an internally implemented data structure and not designed to be implemented by consumers of the framework."
    },
    {
        "type": "io.micronaut.core.annotation.AnnotationMetadata",
        "member": "Method io.micronaut.core.annotation.AnnotationMetadata.getDeclaredStereotypeAnnotationNames()",
        "reason": "AnnotationMetadata is an internally implemented data structure and not designed to be implemented by consumers of the framework."
    },
    {
        "type": "io.micronaut.core.annotation.AnnotationMetadata",
        "member": "Class io.micronaut.core.annotation.AnnotationMetadata",
        "reason": "AnnotationMetadata is an internally implemented data structure and not designed to be implemented by consumers of the framework."
    },
    {
        "type": "io.micronaut.inject.writer.ClassWriterOutputVisitor",
        "member": "Class io.micronaut.inject.writer.ClassWriterOutputVisitor",
        "reason": "Classes in the io.micronaut.inject.writer package are considered non-public implementation detail"
    },
    {
        "type": "io.micronaut.inject.writer.ClassWriterOutputVisitor",
        "member": "Method io.micronaut.inject.writer.ClassWriterOutputVisitor.visitServiceDescriptor(java.lang.Class,java.lang.String,io.micronaut.inject.ast.Element)",
        "reason": "Classes in the io.micronaut.inject.writer package are considered non-public implementation detail"
    },
    {
        "type": "io.micronaut.graal.reflect.GraalTypeElementVisitor",
        "member": "Class io.micronaut.graal.reflect.GraalTypeElementVisitor",
        "reason": "The Graal visitor is internal to the compiler and implementation detail not part of the public API"
    },
    {
        "type": "io.micronaut.graal.reflect.GraalTypeElementVisitor",
        "member": "Field originatingElements",
        "reason": "The Graal visitor is internal to the compiler and implementation detail not part of the public API"
    },
    {
        "type": "io.micronaut.graal.reflect.GraalTypeElementVisitor",
        "member": "Field classes",
        "reason": "The Graal visitor is internal to the compiler and implementation detail not part of the public API"
    },
    {
        "type": "io.micronaut.graal.reflect.GraalTypeElementVisitor",
        "member": "Field packages",
        "reason": "The Graal visitor is internal to the compiler and implementation detail not part of the public API"
    },
    {
        "type": "io.micronaut.graal.reflect.GraalTypeElementVisitor",
        "member": "Field arrays",
        "reason": "The Graal visitor is internal to the compiler and implementation detail not part of the public API"
    },
    {
        "type": "io.micronaut.graal.reflect.GraalTypeElementVisitor",
        "member": "Method io.micronaut.graal.reflect.GraalTypeElementVisitor.visitConstructor(io.micronaut.inject.ast.ConstructorElement,io.micronaut.inject.visitor.VisitorContext)",
        "reason": "The Graal visitor is internal to the compiler and implementation detail not part of the public API"
    },
    {
        "type": "io.micronaut.graal.reflect.GraalTypeElementVisitor",
        "member": "Method io.micronaut.graal.reflect.GraalTypeElementVisitor.visitField(io.micronaut.inject.ast.FieldElement,io.micronaut.inject.visitor.VisitorContext)",
        "reason": "The Graal visitor is internal to the compiler and implementation detail not part of the public API"
    },
    {
        "type": "io.micronaut.graal.reflect.GraalTypeElementVisitor",
        "member": "Method io.micronaut.graal.reflect.GraalTypeElementVisitor.visitMethod(io.micronaut.inject.ast.MethodElement,io.micronaut.inject.visitor.VisitorContext)",
        "reason": "The Graal visitor is internal to the compiler and implementation detail not part of the public API"
    },
    {
        "type": "io.micronaut.aop.InterceptedProxy",
        "member": "Class io.micronaut.aop.InterceptedProxy",
        "reason": "Class now extends similar interface from the Inject module allowing to detect intercepted proxies"
    },
    {
        "type": "io.micronaut.aop.InterceptedProxy",
        "member": "Method io.micronaut.aop.InterceptedProxy.hasCachedInterceptedTarget()",
        "reason": "New default method introduced to detect cached target, the interface is only implemented by the class generation"
    },
    {
        "type": "io.micronaut.context.BeanDefinitionRegistry",
        "member": "Class io.micronaut.context.BeanDefinitionRegistry",
        "reason": "Added a new method"
    },
    {
        "type": "io.micronaut.context.BeanDefinitionRegistry",
        "member": "Method io.micronaut.context.BeanDefinitionRegistry.findProxyTargetBeanDefinition(io.micronaut.inject.BeanDefinition)",
        "reason": "New method introduced"
    },
    {
        "type": "io.micronaut.context.scope.CustomScope",
        "member": "Class io.micronaut.context.scope.CustomScope",
        "reason": "Added a new method"
    },
    {
        "type": "io.micronaut.context.scope.CustomScope",
        "member": "Method io.micronaut.context.scope.CustomScope.findBeanRegistration(io.micronaut.inject.BeanDefinition)",
        "reason": "New method added with a default implementation"
    },
    {
        "type": "io.micronaut.http.client.ProxyHttpClient",
        "member": "Class io.micronaut.http.client.ProxyHttpClient",
        "reason": "New method added with a default implementation"
    },
    {
        "type": "io.micronaut.http.client.ProxyHttpClient",
        "member": "Method io.micronaut.http.client.ProxyHttpClient.proxy(io.micronaut.http.HttpRequest,io.micronaut.http.client.ProxyRequestOptions)",
        "reason": "New method added with a default implementation"
    },
    {
        "type": "io.micronaut.context.annotation.Replaces",
        "member": "Class io.micronaut.context.annotation.Replaces",
        "reason": "Improvement of the API"
    },
    {
        "type": "io.micronaut.context.annotation.Replaces",
        "member": "Method io.micronaut.context.annotation.Replaces.qualifier()",
        "reason": "Improvement of the API"
    }
]