plugins {
    id "io.micronaut.build.internal.convention-library"
    id "org.jetbrains.kotlin.jvm"
    id "org.jetbrains.kotlin.kapt"
}

micronautBuild {
    binaryCompatibility {
        enabled.set(false)
    }
}

dependencies {
    annotationProcessor project(":inject-java")
    annotationProcessor project(":graal")

    api project(':context')
    api project(':inject')
    api project(':aop')

//    implementation 'io.micrometer:context-propagation:1.0.2'

    compileOnly project(':core-reactive')
    compileOnly libs.managed.reactor

    compileOnly platform(libs.test.boms.micronaut.rxjava2)
    compileOnly platform(libs.test.boms.micronaut.rxjava3)
    compileOnly platform(libs.test.boms.micronaut.reactor)

    testImplementation platform(libs.test.boms.micronaut.rxjava2)
    testImplementation platform(libs.test.boms.micronaut.rxjava3)
    testImplementation platform(libs.test.boms.micronaut.reactor)

    compileOnly ("io.micronaut.rxjava2:micronaut-rxjava2-http-client") {
        exclude group: "io.micronaut"
    }
    compileOnly ("io.micronaut.rxjava3:micronaut-rxjava3-http-client") {
        exclude group: "io.micronaut"
    }

    testImplementation project(":inject-groovy")
    testAnnotationProcessor project(":inject-java")

    testImplementation project(":runtime")
    testImplementation project(":jackson-databind")
    testImplementation project(":core-reactive")
    testImplementation project(":inject-java-test")
    testImplementation project(":http-client")
    testImplementation project(':http-server-netty')

    testImplementation ("io.micronaut.rxjava2:micronaut-rxjava2-http-client") {
        exclude group: "io.micronaut"
    }
    testImplementation ("io.micronaut.rxjava3:micronaut-rxjava3-http-client") {
        exclude group: "io.micronaut"
    }
    testImplementation ("io.micronaut.reactor:micronaut-reactor-http-client") {
        exclude group: "io.micronaut"
    }
}

// Kotlin
dependencies {
    kapt project(':inject-java')
    kaptTest project(':inject-java')

    compileOnly libs.managed.kotlin.stdlib.jdk8
    compileOnly libs.managed.kotlinx.coroutines.core

    testImplementation libs.managed.kotlin.stdlib.jdk8
    testImplementation libs.managed.kotlinx.coroutines.core
    testImplementation libs.managed.kotlinx.coroutines.reactor
}

tasks.named("compileKotlin") {
    kotlinOptions {
        jvmTarget = '17'
    }
}

tasks.named("compileTestKotlin") {
    kotlinOptions {
        jvmTarget = '17'
    }
}
