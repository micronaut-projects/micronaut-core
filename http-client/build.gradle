plugins {
    id "io.micronaut.build.internal.convention-library"
}

micronautBuild {
    core {
        usesMicronautTestJunit()
        usesMicronautTestSpock()
    }
}

dependencies {
    annotationProcessor project(":inject-java")
    api project(":runtime")
    api project(":http-client-core")
    api project(":websocket")
    api project(":http-netty")
    api libs.managed.netty.handler.proxy

    testAnnotationProcessor project(":validation")
    testAnnotationProcessor project(":inject-java")

    testCompileOnly project(":inject-groovy")
    testImplementation project(":validation")
    testImplementation project(":inject")

    implementation libs.managed.reactor

    testImplementation project(":http-server-netty")
    testImplementation libs.wiremock
    testImplementation libs.managed.logback

    if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_15)) {
        testImplementation libs.bcpkix
    }
}

//tasks.withType(Test).configureEach {
//    jvmArgs('-Dio.netty.leakDetection.level=paranoid')
//    testLogging {
//        showStandardStreams = true
//    }
//    beforeTest {
//        System.out.println("STARTING: ${it.className}.$it.name")
//        System.out.flush()
//    }
//    afterTest {
//        System.out.println("FINISHED: ${it.className}.$it.name")
//        System.out.flush()
//    }
//}
