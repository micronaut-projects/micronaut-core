plugins {
    id "io.micronaut.build.internal.docs"
    id "io.micronaut.build.internal.dependency-updates"
    id "io.micronaut.build.internal.version-catalog-updates"
    id "io.micronaut.build.internal.convention-quality"
}

tasks.named("updateVersionCatalogs") {
    // we set the list to empty because we accept upgrades which improve the status
    rejectedQualifiers = []
    // Invalid POM files
    ignoredModules.add("io.micronaut.ignite:micronaut-ignite-core")
    ignoredModules.add("io.micronaut.ignite:micronaut-ignite-cache")
    // workaround Gradle variant selection problem
    ignoredModules.add("com.github.ben-manes.caffeine:caffeine")
}

if (System.getenv("SONAR_TOKEN") != null) {
    // deprecated and compile time only classes excluded from coverage
    def coverageExcludes = [
        "**/StreamSoftServiceLoader.java",
        "**/ServiceDescriptionProcessor.java",
        "**/GraalReflectionConfigurer.java",
        "**/graal/ServiceLoaderInitialization.java",
        "**/graal/ServiceLoaderInitialization.java",
        "**/DirectoryClassWriterOutputVisitor.java",
        "**/GroovyClassWriterOutputVisitor.java"
    ]
    sonarqube {
        properties {
            property "sonar.exclusions", coverageExcludes.join(",")
        }
    }
}