plugins {
    id "io.micronaut.build.internal.convention-library"
    id "org.jetbrains.kotlin.jvm"
}

dependencies {
    annotationProcessor project(":inject-java")

    api project(":inject-java")
    api libs.managed.groovy
    api(libs.managed.spock) {
        exclude module:'groovy-all'
    }
    if (!JavaVersion.current().isJava9Compatible()) {
        api files(org.gradle.internal.jvm.Jvm.current().toolsJar)
    }

    testAnnotationProcessor project(":inject-java")
    testCompileOnly project(":inject-groovy")
    testImplementation libs.managed.validation
    testImplementation libs.javax.persistence
    testImplementation project(":runtime")
    api libs.blaze.persistence.core

    implementation libs.kotlin.compiler.embeddable
    implementation libs.kotlin.annotation.processing.embeddable
    implementation libs.kotlin.stdlib
}

tasks.named("sourcesJar") {
    from "$projectDir/src/main/groovy"
    from "$projectDir/src/main/kotlin"
}

tasks.named("compileKotlin") {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

tasks.named("compileGroovy") {
    // this allows groovy to access kotlin classes.
    dependsOn tasks.getByPath('compileKotlin')
    classpath += files(compileKotlin.destinationDir)
}
