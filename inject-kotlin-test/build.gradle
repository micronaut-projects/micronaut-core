plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm"
}

dependencies {
    annotationProcessor project(":inject-java")

    api project(":inject-java")
    api dependencyModuleVersion("groovy", "groovy")
    api(dependencyVersion("spock")) {
        exclude module:'groovy-all'
    }
    if (!JavaVersion.current().isJava9Compatible()) {
        api files(org.gradle.internal.jvm.Jvm.current().toolsJar)
    }

    testAnnotationProcessor project(":inject-java")
    testCompileOnly project(":inject-groovy")
    testImplementation dependencyVersion("validation")
    testImplementation "javax.persistence:javax.persistence-api:2.2"
    testImplementation project(":runtime")
    api "com.blazebit:blaze-persistence-core-impl:1.6.0-Alpha1"

    implementation "org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-annotation-processing-embeddable:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
}

afterEvaluate {
    sourcesJar {
        from "$projectDir/src/main/groovy"
        from "$projectDir/src/main/kotlin"
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileGroovy {
    // this allows groovy to access kotlin classes.
    dependsOn tasks.getByPath('compileKotlin')
    classpath += files(compileKotlin.destinationDir)
}
