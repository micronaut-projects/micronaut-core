plugins {
    id "io.micronaut.build.internal.convention-library"
    id "org.jetbrains.kotlin.jvm"
}

dependencies {
    annotationProcessor project(":inject-java")
    annotationProcessor project(":graal")
    api project(":context")
    api project(":core-reactive")
    implementation project(":context-propagation")
    implementation libs.managed.reactor
    compileOnly libs.managed.kotlinx.coroutines.core
    compileOnly libs.managed.kotlinx.coroutines.reactor

    compileOnly libs.managed.jackson.annotations

    testCompileOnly project(":inject-groovy")
    testAnnotationProcessor project(":inject-java")
    testImplementation project(":jackson-databind")
    testImplementation project(":inject")
    testImplementation project(":runtime")
    testImplementation(libs.logback.classic)
}

tasks.named("compileKotlin") {
    kotlinOptions.jvmTarget = "17"
}

//compileJava.options.fork = true
//compileJava.options.forkOptions.jvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005']

spotless {
    java {
        targetExclude '**/io/micronaut/http/uri/QueryStringDecoder.java'
    }
}
